
// STEP-0 init
    context c;
    expr x = c.bool_const("x");
    expr y = c.bool_const("y");
    expr conjecture = !(x && y) == (!x || !y);
    
    // STEP-1  create a solver
    solver s(c);
    
    // STEP-2 assert the negation of the conjecture
    s.add(!conjecture);
    
    std::cout << s << "\n";
    std::cout << s.to_smt2() << "\n";
     
    // STEP-3 checks if the result is unsat.
    switch (s.check()) {
    case unsat:   std::cout << "de-Morgan is valid\n"; break;
    case sat:     std::cout << "de-Morgan is not valid\n"; break;
    case unknown: std::cout << "unknown\n"; break;
    }
